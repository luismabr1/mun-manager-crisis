{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nconst BASE_URL = 'http://localhost:3011/api';\n/* const delay = ms => new Promise(resolve => setTimeout(resolve, ms));\r\nconst randomNumber = (min = 0, max = 1) =>\r\n  Math.floor(Math.random() * (max - min + 1)) + min;\r\nconst simulateNetworkLatency = (min = 30, max = 1500) =>\r\n  delay(randomNumber(min, max)); */\n\nasync function callApi(endpoint, options = {}) {\n  await simulateNetworkLatency();\n  options.headers = {\n    'Content-Type': 'application/json',\n    Accept: 'application/json'\n  };\n  const url = BASE_URL + endpoint;\n  const response = await fetch(url, options);\n  const data = await response.json();\n  return data;\n}\n\nconst api = {\n  badges: {\n    list() {\n      return callApi('/badges');\n    },\n\n    create(badge) {\n      // throw new Error('500: Server error');\n      return callApi(`/badges`, {\n        method: 'POST',\n        body: _JSON$stringify(badge)\n      });\n    },\n\n    read(badgeId) {\n      return callApi(`/badges/${badgeId}`);\n    },\n\n    update(badgeId, updates) {\n      return callApi(`/badges/${badgeId}`, {\n        method: 'PUT',\n        body: _JSON$stringify(updates)\n      });\n    },\n\n    // Lo hubiera llamado `delete`, pero `delete` es un keyword en JavaScript asi que no es buena idea :P\n    remove(badgeId) {\n      return callApi(`/badges/${badgeId}`, {\n        method: 'DELETE'\n      });\n    }\n\n  }\n};\nexport default api;","map":{"version":3,"sources":["C:/Users/lbrito/Dropbox/Desarrollos/Movenu Version 2019/pages/api/api.js"],"names":["BASE_URL","callApi","endpoint","options","simulateNetworkLatency","headers","Accept","url","response","fetch","data","json","api","badges","list","create","badge","method","body","read","badgeId","update","updates","remove"],"mappings":";AAAA,MAAMA,QAAQ,GAAG,2BAAjB;AAEA;;;;;;AAMA,eAAeC,OAAf,CAAuBC,QAAvB,EAAiCC,OAAO,GAAG,EAA3C,EAA+C;AAC7C,QAAMC,sBAAsB,EAA5B;AAEAD,EAAAA,OAAO,CAACE,OAAR,GAAkB;AAChB,oBAAgB,kBADA;AAEhBC,IAAAA,MAAM,EAAE;AAFQ,GAAlB;AAKA,QAAMC,GAAG,GAAGP,QAAQ,GAAGE,QAAvB;AACA,QAAMM,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,EAAMJ,OAAN,CAA5B;AACA,QAAMO,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AAEA,SAAOD,IAAP;AACD;;AAED,MAAME,GAAG,GAAG;AACVC,EAAAA,MAAM,EAAE;AACNC,IAAAA,IAAI,GAAG;AACL,aAAOb,OAAO,CAAC,SAAD,CAAd;AACD,KAHK;;AAINc,IAAAA,MAAM,CAACC,KAAD,EAAQ;AACZ;AACA,aAAOf,OAAO,CAAE,SAAF,EAAY;AACxBgB,QAAAA,MAAM,EAAE,MADgB;AAExBC,QAAAA,IAAI,EAAE,gBAAeF,KAAf;AAFkB,OAAZ,CAAd;AAID,KAVK;;AAWNG,IAAAA,IAAI,CAACC,OAAD,EAAU;AACZ,aAAOnB,OAAO,CAAE,WAAUmB,OAAQ,EAApB,CAAd;AACD,KAbK;;AAcNC,IAAAA,MAAM,CAACD,OAAD,EAAUE,OAAV,EAAmB;AACvB,aAAOrB,OAAO,CAAE,WAAUmB,OAAQ,EAApB,EAAuB;AACnCH,QAAAA,MAAM,EAAE,KAD2B;AAEnCC,QAAAA,IAAI,EAAE,gBAAeI,OAAf;AAF6B,OAAvB,CAAd;AAID,KAnBK;;AAoBN;AACAC,IAAAA,MAAM,CAACH,OAAD,EAAU;AACd,aAAOnB,OAAO,CAAE,WAAUmB,OAAQ,EAApB,EAAuB;AACnCH,QAAAA,MAAM,EAAE;AAD2B,OAAvB,CAAd;AAGD;;AAzBK;AADE,CAAZ;AA8BA,eAAeL,GAAf","sourcesContent":["const BASE_URL = 'http://localhost:3011/api';\r\n\r\n/* const delay = ms => new Promise(resolve => setTimeout(resolve, ms));\r\nconst randomNumber = (min = 0, max = 1) =>\r\n  Math.floor(Math.random() * (max - min + 1)) + min;\r\nconst simulateNetworkLatency = (min = 30, max = 1500) =>\r\n  delay(randomNumber(min, max)); */\r\n\r\nasync function callApi(endpoint, options = {}) {\r\n  await simulateNetworkLatency();\r\n\r\n  options.headers = {\r\n    'Content-Type': 'application/json',\r\n    Accept: 'application/json',\r\n  };\r\n\r\n  const url = BASE_URL + endpoint;\r\n  const response = await fetch(url, options);\r\n  const data = await response.json();\r\n\r\n  return data;\r\n}\r\n\r\nconst api = {\r\n  badges: {\r\n    list() {\r\n      return callApi('/badges');\r\n    },\r\n    create(badge) {\r\n      // throw new Error('500: Server error');\r\n      return callApi(`/badges`, {\r\n        method: 'POST',\r\n        body: JSON.stringify(badge),\r\n      });\r\n    },\r\n    read(badgeId) {\r\n      return callApi(`/badges/${badgeId}`);\r\n    },\r\n    update(badgeId, updates) {\r\n      return callApi(`/badges/${badgeId}`, {\r\n        method: 'PUT',\r\n        body: JSON.stringify(updates),\r\n      });\r\n    },\r\n    // Lo hubiera llamado `delete`, pero `delete` es un keyword en JavaScript asi que no es buena idea :P\r\n    remove(badgeId) {\r\n      return callApi(`/badges/${badgeId}`, {\r\n        method: 'DELETE',\r\n      });\r\n    },\r\n  },\r\n};\r\n\r\nexport default api;\r\n"]},"metadata":{},"sourceType":"module"}