{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\lbrito\\\\Dropbox\\\\Desarrollos\\\\Movenu Version 2019\\\\components\\\\BicameralList.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport Gravatar from '../components/Gravatar';\n/* import Gravatar from './Gravatar'; */\n\nvar BadgesListItem =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BadgesListItem, _React$Component);\n\n  function BadgesListItem() {\n    _classCallCheck(this, BadgesListItem);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(BadgesListItem).apply(this, arguments));\n  }\n\n  _createClass(BadgesListItem, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        className: \"BadgesListItem\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }, __jsx(Gravatar, {\n        className: \"BadgesListItem__avatar\",\n        email: this.props.badge.image,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }), __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, __jsx(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, this.props.badge.name, \"\\xA0\\xA0 || \\xA0\\xA0\", this.props.badge.spieces), __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }), \"@\", this.props.badge.type, __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }), this.props.badge.origin.name), __jsx(\"style\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"\\n            .BadgesListItem {\\n                background: #FFFFFF;\\n                box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.23);\\n                border-radius: 5px;\\n                display: flex;\\n                padding: 1rem;\\n              }\\n              \\n              .BadgesListItem__avatar {\\n                border-radius: 50%;\\n                background: #a3a3a3;\\n                margin-right: 0.5rem;\\n                width: 80px;\\n                height: 80px;\\n              }\\n        \"));\n    }\n  }]);\n\n  return BadgesListItem;\n}(React.Component);\n\nfunction useSearchBadges(badges) {\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      query = _React$useState2[0],\n      setQuery = _React$useState2[1];\n\n  var _React$useState3 = React.useState(badges),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      filteredBadges = _React$useState4[0],\n      setFilteredBadges = _React$useState4[1];\n\n  React.useMemo(function () {\n    var result = badges.filter(function (badge) {\n      return \"\".concat(badge.name).toLowerCase().includes(query.toLowerCase());\n    });\n    setFilteredBadges(result);\n  }, [badges, query]);\n  return {\n    query: query,\n    setQuery: setQuery,\n    filteredBadges: filteredBadges\n  };\n}\n\nfunction BadgesList(props) {\n  var badges = props.badges;\n\n  var _useSearchBadges = useSearchBadges(badges),\n      query = _useSearchBadges.query,\n      setQuery = _useSearchBadges.setQuery,\n      filteredBadges = _useSearchBadges.filteredBadges;\n\n  if (filteredBadges.length === 0) {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Filter Directives\"), __jsx(\"input\", {\n      type: \"text\",\n      placeholder: \"Comite B\",\n      className: \"form-control\",\n      value: query,\n      onChange: function onChange(e) {\n        setQuery(e.target.value);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })), __jsx(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"No directives or delegates were found\"), __jsx(Link, {\n      className: \"btn btn-primary\",\n      to: \"/comite/bicameral/new\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Create new Delegate\"));\n  }\n\n  return __jsx(\"div\", {\n    className: \"Badges__container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"Filter Directives\"), __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"Buscar en comite B\",\n    className: \"form-control\",\n    value: query,\n    onChange: function onChange(e) {\n      setQuery(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }), __jsx(\"ul\", {\n    className: \"list-unstyled\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, filteredBadges.map(function (badge) {\n    return __jsx(\"li\", {\n      key: badge.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, __jsx(Link, {\n      className: \"text-reset text-decoration-none\",\n      route: \"/bicameral/\".concat(badge.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, __jsx(BadgesListItem, {\n      badge: badge,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    })));\n  }))), __jsx(\"style\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \"\\n         .BadgesListItem {\\n            background: #FFFFFF;\\n            box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.23);\\n            border-radius: 5px;\\n            display: flex;\\n            padding: 1rem;\\n            cursor: pointer;\\n          }\\n          \\n          .BadgesListItem__avatar {\\n            border-radius: 50%;\\n            background: #a3a3a3;\\n            margin-right: 0.5rem;\\n            width: 100px;\\n            height: 100px;\\n          }\\n            .list-unstyled {\\n                padding-left: 0;\\n                list-style: none;\\n\\n              }\\n\\n              .text-reset {\\n                color: inherit !important;\\n              }\\n              .text-decoration-none {\\n                text-decoration: none !important;\\n              }\\n              .form-control {\\n                display: block;\\n                width: 100%;\\n                height: calc(1.5em + 0.75rem + 2px);\\n                padding: 0.375rem 0.75rem;\\n                font-size: 1rem;\\n                font-weight: 400;\\n                line-height: 1.5;\\n                color: #495057;\\n                background-color: #fff;\\n                background-clip: padding-box;\\n                border: 1px solid #ced4da;\\n                border-radius: 0.25rem;\\n                transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\\n              }\\n              .form-group {\\n                margin-bottom: 1rem;\\n              }\\n              \\n\\n        \"));\n}\n\nexport default BadgesList;","map":{"version":3,"sources":["C:/Users/lbrito/Dropbox/Desarrollos/Movenu Version 2019/components/BicameralList.js"],"names":["Link","Gravatar","BadgesListItem","props","badge","image","name","spieces","type","origin","React","Component","useSearchBadges","badges","useState","query","setQuery","filteredBadges","setFilteredBadges","useMemo","result","filter","toLowerCase","includes","BadgesList","length","e","target","value","map","id"],"mappings":"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","sourcesContent":["import Link from 'next/link';\r\nimport Gravatar from '../components/Gravatar';\r\n/* import Gravatar from './Gravatar'; */\r\n\r\n\r\n\r\nclass BadgesListItem extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"BadgesListItem\">\r\n        <Gravatar\r\n          className=\"BadgesListItem__avatar\"\r\n          email={this.props.badge.image}\r\n        />\r\n\r\n        <div>\r\n          <strong>\r\n            {this.props.badge.name}\r\n            &nbsp;&nbsp; || &nbsp;&nbsp;\r\n            {this.props.badge.spieces}\r\n          </strong>\r\n          <br />@{this.props.badge.type}\r\n          <br />\r\n          {this.props.badge.origin.name}\r\n        </div>\r\n        <style>{`\r\n            .BadgesListItem {\r\n                background: #FFFFFF;\r\n                box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.23);\r\n                border-radius: 5px;\r\n                display: flex;\r\n                padding: 1rem;\r\n              }\r\n              \r\n              .BadgesListItem__avatar {\r\n                border-radius: 50%;\r\n                background: #a3a3a3;\r\n                margin-right: 0.5rem;\r\n                width: 80px;\r\n                height: 80px;\r\n              }\r\n        `}</style>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction useSearchBadges(badges) {\r\n  const [query, setQuery] = React.useState('');\r\n  const [filteredBadges, setFilteredBadges] = React.useState(badges);\r\n\r\n  React.useMemo(() => {\r\n    const result = badges.filter(badge => {\r\n      return `${badge.name}`\r\n        .toLowerCase()\r\n        .includes(query.toLowerCase());\r\n    });\r\n\r\n    setFilteredBadges(result);\r\n  }, [badges, query]);\r\n\r\n  return { query, setQuery, filteredBadges };\r\n}\r\n\r\n\r\nfunction BadgesList(props) {\r\n  const badges = props.badges;\r\n\r\n  const { query, setQuery, filteredBadges } = useSearchBadges(badges);\r\n\r\n  if (filteredBadges.length === 0) {\r\n    return (\r\n      <div>\r\n        <div className=\"form-group\">\r\n          <label>Filter Directives</label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Comite B\"\r\n            className=\"form-control\"\r\n            value={query}\r\n            onChange={e => {\r\n              setQuery(e.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <h3>No directives or delegates were found</h3>\r\n        <Link className=\"btn btn-primary\" to=\"/comite/bicameral/new\">\r\n          Create new Delegate\r\n        </Link>\r\n      </div>\r\n    );\r\n  } \r\n\r\n  return (\r\n\r\n    <div className=\"Badges__container\">\r\n        <div className=\"form-group\">\r\n            <label>Filter Directives</label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Buscar en comite B\"\r\n              className=\"form-control\"\r\n              value={query}\r\n              onChange={e => {\r\n                setQuery(e.target.value);\r\n              }}\r\n            />\r\n          \r\n\r\n          <ul className=\"list-unstyled\">\r\n            {filteredBadges.map(badge => {\r\n              return (\r\n                <li key={badge.id}>\r\n                  <Link\r\n                    className=\"text-reset text-decoration-none\"\r\n                    route={`/bicameral/${badge.id}`}\r\n                  >\r\n                    <BadgesListItem badge={badge} />\r\n                  </Link>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n\r\n        </div>\r\n        <style>{`\r\n         .BadgesListItem {\r\n            background: #FFFFFF;\r\n            box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.23);\r\n            border-radius: 5px;\r\n            display: flex;\r\n            padding: 1rem;\r\n            cursor: pointer;\r\n          }\r\n          \r\n          .BadgesListItem__avatar {\r\n            border-radius: 50%;\r\n            background: #a3a3a3;\r\n            margin-right: 0.5rem;\r\n            width: 100px;\r\n            height: 100px;\r\n          }\r\n            .list-unstyled {\r\n                padding-left: 0;\r\n                list-style: none;\r\n\r\n              }\r\n\r\n              .text-reset {\r\n                color: inherit !important;\r\n              }\r\n              .text-decoration-none {\r\n                text-decoration: none !important;\r\n              }\r\n              .form-control {\r\n                display: block;\r\n                width: 100%;\r\n                height: calc(1.5em + 0.75rem + 2px);\r\n                padding: 0.375rem 0.75rem;\r\n                font-size: 1rem;\r\n                font-weight: 400;\r\n                line-height: 1.5;\r\n                color: #495057;\r\n                background-color: #fff;\r\n                background-clip: padding-box;\r\n                border: 1px solid #ced4da;\r\n                border-radius: 0.25rem;\r\n                transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\r\n              }\r\n              .form-group {\r\n                margin-bottom: 1rem;\r\n              }\r\n              \r\n\r\n        `}</style>\r\n    </div>\r\n\r\n\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\nexport default BadgesList;"]},"metadata":{},"sourceType":"module"}