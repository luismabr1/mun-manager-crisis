{"version":3,"file":"static/webpack/static\\development\\pages\\bicameral.js.6bb9d419f209d7c9425d.hot-update.js","sources":["webpack:///./components/BicameralList.js"],"sourcesContent":["import Link from 'next/link';\r\nimport Gravatar from '../components/Gravatar';\r\n/* import Gravatar from './Gravatar'; */\r\n\r\n\r\n\r\nclass BadgesListItem extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"BadgesListItem\">\r\n        <Gravatar\r\n          className=\"BadgesListItem__avatar\"\r\n          email={this.props.badge.image}\r\n        />\r\n\r\n        <div>\r\n          <strong>\r\n            {this.props.badge.name}\r\n            &nbsp;&nbsp; || &nbsp;&nbsp;\r\n            {this.props.badge.spieces}\r\n          </strong>\r\n          <br />@{this.props.badge.type}\r\n          <br />\r\n          {this.props.badge.origin.name}\r\n        </div>\r\n        <style>{`\r\n            .BadgesListItem {\r\n                background: #FFFFFF;\r\n                box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.23);\r\n                border-radius: 5px;\r\n                display: flex;\r\n                padding: 1rem;\r\n              }\r\n              \r\n              .BadgesListItem__avatar {\r\n                border-radius: 50%;\r\n                background: #a3a3a3;\r\n                margin-right: 0.5rem;\r\n                width: 80px;\r\n                height: 80px;\r\n              }\r\n        `}</style>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction useSearchBadges(badges) {\r\n  const [query, setQuery] = React.useState('');\r\n  const [filteredBadges, setFilteredBadges] = React.useState(badges);\r\n\r\n  React.useMemo(() => {\r\n    const result = badges.filter(badge => {\r\n      return `${badge.name}`\r\n        .toLowerCase()\r\n        .includes(query.toLowerCase());\r\n    });\r\n\r\n    setFilteredBadges(result);\r\n  }, [badges, query]);\r\n\r\n  return { query, setQuery, filteredBadges };\r\n}\r\n\r\n\r\nfunction BadgesList(props) {\r\n  const badges = props.badges;\r\n\r\n  const { query, setQuery, filteredBadges } = useSearchBadges(badges);\r\n\r\n  if (filteredBadges.length === 0) {\r\n    return (\r\n      <div>\r\n        <div className=\"form-group\">\r\n          <label>Filter Directives</label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Comite B\"\r\n            className=\"form-control\"\r\n            value={query}\r\n            onChange={e => {\r\n              setQuery(e.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <h3>No directives or delegates were found</h3>\r\n        <Link className=\"btn btn-primary\" to=\"/comite/bicameral/new\">\r\n          Create new Delegate\r\n        </Link>\r\n      </div>\r\n    );\r\n  } \r\n\r\n  return (\r\n\r\n    <div className=\"Badges__container\">\r\n        <div className=\"form-group\">\r\n            <label>Filter Directives</label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Buscar en comite B\"\r\n              className=\"form-control\"\r\n              value={query}\r\n              onChange={e => {\r\n                setQuery(e.target.value);\r\n              }}\r\n            />\r\n          \r\n\r\n          <ul className=\"list-unstyled\">\r\n            {filteredBadges.map(badge => {\r\n              return (\r\n                <li key={badge.id}>\r\n                  <Link\r\n                    className=\"text-reset text-decoration-none\"\r\n                    route={`/bicameral/${badge.id}`}\r\n                  >\r\n                    <BadgesListItem badge={badge} />\r\n                  </Link>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n\r\n        </div>\r\n        <style>{`\r\n         .BadgesListItem {\r\n            background: #FFFFFF;\r\n            box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.23);\r\n            border-radius: 5px;\r\n            display: flex;\r\n            padding: 1rem;\r\n          }\r\n          \r\n          .BadgesListItem__avatar {\r\n            border-radius: 50%;\r\n            background: #a3a3a3;\r\n            margin-right: 0.5rem;\r\n            width: 100px;\r\n            height: 100px;\r\n          }\r\n            .list-unstyled {\r\n                padding-left: 0;\r\n                list-style: none;\r\n              }\r\n\r\n              .text-reset {\r\n                color: inherit !important;\r\n              }\r\n              .text-decoration-none {\r\n                text-decoration: none !important;\r\n              }\r\n              .form-control {\r\n                display: block;\r\n                width: 100%;\r\n                height: calc(1.5em + 0.75rem + 2px);\r\n                padding: 0.375rem 0.75rem;\r\n                font-size: 1rem;\r\n                font-weight: 400;\r\n                line-height: 1.5;\r\n                color: #495057;\r\n                background-color: #fff;\r\n                background-clip: padding-box;\r\n                border: 1px solid #ced4da;\r\n                border-radius: 0.25rem;\r\n                transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\r\n              }\r\n              .form-group {\r\n                margin-bottom: 1rem;\r\n              }\r\n              \r\n\r\n        `}</style>\r\n    </div>\r\n\r\n\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\nexport default BadgesList;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAGA;;;;;;;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmBA;;;;AAtCA;AACA;AAwCA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AAGA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoDA;AACA;AAIA;;;;A","sourceRoot":""}